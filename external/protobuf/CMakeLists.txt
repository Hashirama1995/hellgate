#input variables
#	PROTOBUF_GIT_TAG
#	PROTOBUF_BUILD_DIR
#	PROTOBUF_INSTALL_DIR

cmake_minimum_required(VERSION 3.5.1)

project(protobufBuild)

include(ExternalProject)

if(MSVC AND NOT (${CMAKE_GENERATOR} MATCHES "Win64"))
    set(PROTOBUF_CMAKE_GENERATOR_PLATFORM -A ${CMAKE_GENERATOR_PLATFORM})
else()
    set(PROTOBUF_CMAKE_GENERATOR_PLATFORM)
endif()

# PROTOBUF_GIT_REPOSITORY https://github.com/protocolbuffers/protobuf.git
set(PROTOBUF_GIT_REPOSITORY https://github.com/protocolbuffers/protobuf.git)

set(PROTOBUF_BUILD_DIR_DEBUG ${PROTOBUF_BUILD_DIR}/Debug)
file(MAKE_DIRECTORY ${PROTOBUF_BUILD_DIR_DEBUG})
set(PROTOBUF_BUILD_DIR_COMPILER ${PROTOBUF_BUILD_DIR}/Compiler)
file(MAKE_DIRECTORY ${PROTOBUF_BUILD_DIR_COMPILER})

set(PROTOBUF_CONFIGURE_OPTIONS_COMMON
	-Dprotobuf_BUILD_TESTS:BOOL=OFF
	-Dprotobuf_WITH_ZLIB:BOOL=OFF
	-Dprotobuf_MSVC_STATIC_RUNTIME:BOOL=OFF
	-DCMAKE_INSTALL_PREFIX:PATH=${PROTOBUF_INSTALL_DIR}
	-G ${CMAKE_GENERATOR}
	${PROTOBUF_CMAKE_GENERATOR_PLATFORM}
)

set(PROTOBUF_CONFIGURE_OPTIONS_LIBS
	${PROTOBUF_CONFIGURE_OPTIONS_COMMON}
	-Dprotobuf_BUILD_PROTOC_BINARIES:BOOL=OFF
)

set(PROTOBUF_CONFIGURE_OPTIONS_COMPILER
	${PROTOBUF_CONFIGURE_OPTIONS_COMMON}
	-Dprotobuf_BUILD_PROTOC_BINARIES:BOOL=ON
)
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MDd /Zi /Ob0 /Od /RTC1")

set(PROTOBUF_CONFIGURE_COMMAND
	${CMAKE_COMMAND} ${PROTOBUF_CONFIGURE_OPTIONS_COMPILER} -S ./cmake -B ${PROTOBUF_BUILD_DIR_COMPILER}
)

set(PROTOBUF_BUILD_COMMAND_DEBUG ${CMAKE_COMMAND} --build ${PROTOBUF_BUILD_DIR_COMPILER} --config Debug)
set(PROTOBUF_BUILD_COMMAND_COMPILER ${CMAKE_COMMAND} --build ${PROTOBUF_BUILD_DIR_COMPILER} --config RelWithDebInfo)
set(PROTOBUF_BUILD_COMMAND
	${PROTOBUF_BUILD_COMMAND_DEBUG} &&
	${PROTOBUF_BUILD_COMMAND_COMPILER}
)

set(PROTOBUF_INSTALL_COMMAND
	${PROTOBUF_BUILD_COMMAND_DEBUG} --target install &&
	${PROTOBUF_BUILD_COMMAND_COMPILER} --target install
)

cmake_policy(SET CMP0097 NEW)

if(${CMAKE_VERSION} VERSION_LESS "3.17.0") 
    ExternalProject_Add(
        protobuf
        GIT_REPOSITORY ${PROTOBUF_GIT_REPOSITORY}
        GIT_TAG ${PROTOBUF_GIT_TAG}
        GIT_SUBMODULES ""
        #GIT_SUBMODULES_RECURSE FALSE
        CONFIGURE_COMMAND ${PROTOBUF_CONFIGURE_COMMAND}
        BUILD_COMMAND ${PROTOBUF_BUILD_COMMAND}
        INSTALL_COMMAND ${PROTOBUF_INSTALL_COMMAND}
        BUILD_IN_SOURCE 1
    )
else()
    ExternalProject_Add(
        protobuf
        GIT_REPOSITORY ${PROTOBUF_GIT_REPOSITORY}
        GIT_TAG ${PROTOBUF_GIT_TAG}
        GIT_SUBMODULES ""
        GIT_SUBMODULES_RECURSE FALSE
        CONFIGURE_COMMAND ${PROTOBUF_CONFIGURE_COMMAND}
        BUILD_COMMAND ${PROTOBUF_BUILD_COMMAND}
        INSTALL_COMMAND ${PROTOBUF_INSTALL_COMMAND}
        BUILD_IN_SOURCE 1
    )
endif()
