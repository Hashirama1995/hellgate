#input variables
#	GRPC_GIT_TAG
#	GRPC_BUILD_DIR
#	GRPC_INSTALL_DIR
#	GRPC_PROTOBUF_ROOT_DIR
#	GRPC_OPENSSL_ROOT_DIR

cmake_minimum_required(VERSION 3.5.1)

project(grpcBuild)

include(ExternalProject)

if(MSVC AND NOT (${CMAKE_GENERATOR} MATCHES "Win64"))
	set(GRPC_CMAKE_GENERATOR_PLATFORM -A ${CMAKE_GENERATOR_PLATFORM})
else()
	set(GRPC_CMAKE_GENERATOR_PLATFORM)
endif()

# GRPC_GIT_REPOSITORY https://github.com/grpc/grpc.git
set(GRPC_GIT_REPOSITORY https://github.com/grpc/grpc.git)

set(GRPC_BUILD_DIR_DEBUG ${GRPC_BUILD_DIR}/Debug)
file(MAKE_DIRECTORY ${GRPC_BUILD_DIR_DEBUG})
set(GRPC_BUILD_DIR_COMPILER ${GRPC_BUILD_DIR}/Compiler)
file(MAKE_DIRECTORY ${GRPC_BUILD_DIR_COMPILER})

set(GRPC_CONFIGURE_OPTIONS_COMMON
	-DgRPC_INSTALL:BOOl=ON
	-DgRPC_BUILD_TESTS:BOOl=OFF
	-DgRPC_BUILD_CODEGEN:BOOL=ON

	-DgRPC_BUILD_CSHARP_EXT:BOOL=OFF
	-DgRPC_BUILD_GRPC_CSHARP_PLUGIN:BOOL=OFF
	-DgRPC_BUILD_GRPC_NODE_PLUGIN:BOOL=OFF
	-DgRPC_BUILD_GRPC_OBJECTIVE_C_PLUGIN:BOOL=OFF
	-DgRPC_BUILD_GRPC_PHP_PLUGIN:BOOL=OFF
	-DgRPC_BUILD_GRPC_PYTHON_PLUGIN:BOOL=OFF
	-DgRPC_BUILD_GRPC_RUBY_PLUGIN:BOOL=OFF

	-DgRPC_PROTOBUF_PROVIDER:STRING=package
	-DgRPC_PROTOBUF_PACKAGE_TYPE:STRING=CONFIG
	-DProtobuf_DIR:PATH=${GRPC_PROTOBUF_ROOT_DIR}

	-DgRPC_SSL_PROVIDER:STRING=package
	-DOPENSSL_ROOT_DIR:PATH=${GRPC_OPENSSL_ROOT_DIR}
	
	-DCMAKE_DEBUG_POSTFIX:STRING=d
	-DCMAKE_INSTALL_PREFIX:PATH=${GRPC_INSTALL_DIR}
	-G ${CMAKE_GENERATOR}
	${GRPC_CMAKE_GENERATOR_PLATFORM}
)

set(GRPC_CONFIGURE_OPTIONS_LIBS
	${GRPC_CONFIGURE_OPTIONS_COMMON}
	-DgRPC_BUILD_GRPC_CPP_PLUGIN:BOOL=ON
)

set(GRPC_CONFIGURE_OPTIONS_COMPILER
	${GRPC_CONFIGURE_OPTIONS_COMMON}
	-DgRPC_BUILD_GRPC_CPP_PLUGIN:BOOL=ON
)

set(GRPC_CONFIGURE_COMMAND
	${CMAKE_COMMAND} ${GRPC_CONFIGURE_OPTIONS_LIBS} -S . -B ${GRPC_BUILD_DIR_DEBUG} &&
	${CMAKE_COMMAND} ${GRPC_CONFIGURE_OPTIONS_COMPILER} -S . -B ${GRPC_BUILD_DIR_COMPILER}
)
set(GRPC_BUILD_COMMAND_DEBUG ${CMAKE_COMMAND} --build ${GRPC_BUILD_DIR_DEBUG} --config Debug)
set(GRPC_BUILD_COMMAND_COMPILER ${CMAKE_COMMAND} --build ${GRPC_BUILD_DIR_COMPILER} --config RelWithDebInfo)
set(GRPC_BUILD_COMMAND
	${GRPC_BUILD_COMMAND_DEBUG} &&
	${GRPC_BUILD_COMMAND_COMPILER}
)

set(GRPC_INSTALL_COMMAND
	${GRPC_BUILD_COMMAND_DEBUG} --target install &&
	${GRPC_BUILD_COMMAND_COMPILER} --target install
)

cmake_policy(SET CMP0097 NEW)

if(${CMAKE_VERSION} VERSION_LESS "3.17.0")
    ExternalProject_Add(
        grpc
        GIT_REPOSITORY ${GRPC_GIT_REPOSITORY}
        GIT_TAG ${GRPC_GIT_TAG}
        GIT_SUBMODULES "third_party/re2 third_party/zlib third_party/cares/cares third_party/abseil-cpp"
        # GIT_SUBMODULES_RECURSE FALSE
        CONFIGURE_COMMAND ${GRPC_CONFIGURE_COMMAND}
        BUILD_COMMAND ${GRPC_BUILD_COMMAND}
        INSTALL_COMMAND ${GRPC_INSTALL_COMMAND}
        BUILD_IN_SOURCE 1
    )
else()
    ExternalProject_Add(
        grpc
        GIT_REPOSITORY ${GRPC_GIT_REPOSITORY}
        GIT_TAG ${GRPC_GIT_TAG}
        GIT_SUBMODULES "third_party/re2 third_party/zlib third_party/cares/cares third_party/abseil-cpp"
        GIT_SUBMODULES_RECURSE FALSE
        CONFIGURE_COMMAND ${GRPC_CONFIGURE_COMMAND}
        BUILD_COMMAND ${GRPC_BUILD_COMMAND}
        INSTALL_COMMAND ${GRPC_INSTALL_COMMAND}
        BUILD_IN_SOURCE 1
    )
endif()
